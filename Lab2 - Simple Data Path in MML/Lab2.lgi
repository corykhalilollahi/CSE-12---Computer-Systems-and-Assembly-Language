41 2 0
38 1
8 252 396 301 347 1 0
8 318 396 367 347 1 0
22 258 348 424 328 0 \NUL
Read Register 1 Address
8 432 396 481 347 1 0
8 498 396 547 347 1 0
22 438 348 604 328 0 \NUL
Read Register 2 Address
20 720 414 779 395 0
wadr_0
20 654 414 713 395 0
wadr_1
8 606 396 655 347 1 0
8 672 396 721 347 1 0
22 612 348 767 328 0 \NUL
Write Register Address
20 480 414 539 395 0
adr2_1
20 546 414 605 395 0
adr2_0
20 366 414 425 395 0
adr1_0
20 300 414 359 395 0
adr1_1
19 174 108 233 89 0
reg0_2
19 162 84 221 65 0
reg0_3
19 198 156 257 137 0
reg0_0
19 186 132 245 113 0
reg0_1
11 258 108 285 10 0 1
22 144 36 255 16 0 \NUL
Register 0 Value
19 330 108 389 89 0
reg1_2
19 318 84 377 65 0
reg1_3
19 354 156 413 137 0
reg1_0
19 342 132 401 113 0
reg1_1
11 414 108 441 10 0 1
22 300 36 411 16 0 \NUL
Register 1 Value
19 486 108 545 89 0
reg2_2
19 474 84 533 65 0
reg2_3
19 510 156 569 137 0
reg2_0
19 498 132 557 113 0
reg2_1
11 570 108 597 10 0 1
22 456 36 567 16 0 \NUL
Register 2 Value
19 642 108 701 89 0
reg3_2
19 630 84 689 65 0
reg3_3
19 666 156 725 137 0
reg3_0
19 654 132 713 113 0
reg3_1
11 726 108 753 10 0 1
22 612 36 723 16 0 \NUL
Register 3 Value
19 648 264 707 245 0
alu_2
19 636 240 695 221 0
alu_3
19 672 312 731 293 0
alu_0
19 660 288 719 269 0
alu_1
11 732 264 759 166 0 1
22 648 192 724 172 0 \NUL
ALU Output
25 12 528 119 432
8 12 396 61 347 1 0
8 6 288 55 239 1 1
8 6 192 55 143 1 1
20 66 414 125 395 0
sel
20 60 210 119 191 0
clear
20 150 510 209 491 0
kpad_3
20 138 534 197 515 0
kpad_2
20 132 558 191 539 0
kpad_1
20 120 582 179 563 0
kpad_0
19 336 264 395 245 0
in1_2
19 324 240 383 221 0
in1_3
19 360 312 419 293 0
in1_0
19 348 288 407 269 0
in1_1
11 420 264 447 166 0 1
22 336 192 414 172 0 \NUL
ALU Input 1
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 127 10 0 \NUL
Khalilollahi, Cory
22 12 54 66 34 0 \NUL
ckhalilo
19 174 264 233 245 0
kpad_2
19 162 240 221 221 0
kpad_3
19 198 312 257 293 0
kpad_0
19 186 288 245 269 0
kpad_1
11 258 264 285 166 0 1
22 150 192 249 172 0 \NUL
Keypad Output
22 12 144 117 124 0 \NUL
Clear Registers
22 18 324 100 304 0 \NUL
Store Select
20 60 294 119 275 0
update
22 12 240 121 220 0 \NUL
Update Register
19 492 264 551 245 0
in2_2
19 480 240 539 221 0
in2_3
19 516 312 575 293 0
in2_0
19 504 288 563 269 0
in2_1
11 576 264 603 166 0 1
22 492 192 570 172 0 \NUL
ALU Input 2
22 18 348 230 328 0 \NUL
0 = Keypad input, 1 = ALU result
22 12 102 150 82 0 \NUL
CSE 12, Winter 2020
22 228 450 478 430 0 \NUL
Select clear to initialize registers to 0.
22 228 474 557 454 0 \NUL
Select store select to choose which value to store.
22 228 498 508 478 0 \NUL
Choose read and write register addresses.
22 228 522 727 502 0 \NUL
Read addresses = reg sources of ALU inputs, Write address = reg to save to
22 228 546 480 526 0 \NUL
Press update to save value to register
22 228 594 668 574 0 \NUL
You are only permitted to modify the header comment on this page.
1 655 404 652 371
1 721 404 718 371
1 481 404 478 371
1 547 404 544 371
1 367 404 364 371
1 301 404 298 371
1 259 74 218 74
1 230 98 259 80
1 242 122 259 86
1 254 146 259 92
1 415 74 374 74
1 386 98 415 80
1 398 122 415 86
1 410 146 415 92
1 571 74 530 74
1 542 98 571 80
1 554 122 571 86
1 566 146 571 92
1 727 74 686 74
1 698 98 727 80
1 710 122 727 86
1 722 146 727 92
1 733 230 692 230
1 704 254 733 236
1 716 278 733 242
1 728 302 733 248
1 52 167 61 200
1 58 371 67 404
1 421 230 380 230
1 392 254 421 236
1 404 278 421 242
1 416 302 421 248
1 116 500 151 500
1 116 506 139 524
1 116 512 133 548
1 116 518 121 572
1 259 230 218 230
1 230 254 259 236
1 242 278 259 242
1 254 302 259 248
1 52 263 61 284
1 577 230 536 230
1 548 254 577 236
1 560 278 577 242
1 572 302 577 248
38 2
22 294 42 484 22 0 \NUL
Placeholder signal/recievers
22 18 480 388 460 0 \NUL
These are only present so circuit simulates without error
22 18 504 290 484 0 \NUL
Remove these once logic is implemented
22 18 528 266 508 0 \NUL
You are permitted to modify this page
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 127 10 0 \NUL
Khalilollahi, Cory
22 12 54 66 34 0 \NUL
ckhalilo
22 12 102 150 82 0 \NUL
CSE 12, Winter 2020
38 3
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 127 10 0 \NUL
Khalilollahi, Cory
22 12 54 66 34 0 \NUL
ckhalilo
22 12 102 150 82 0 \NUL
CSE 12, Winter 2020
19 482 194 541 175 0
sel
31 593 197 642 112 0 2
31 258 204 307 119 0 2
31 238 431 287 346 0 2
31 585 415 634 330 0 2
19 167 170 226 151 0
kpad_2
19 493 161 552 142 0
kpad_3
19 481 374 540 355 0
kpad_0
19 116 386 175 367 0
kpad_1
19 169 143 228 124 0
alu_2
19 506 129 565 110 0
alu_3
19 500 340 559 321 0
alu_0
19 143 353 202 334 0
alu_1
14 521 233 570 184
20 681 163 740 144 0
input3
20 340 168 399 149 0
input2
20 320 395 379 376 0
input1
20 677 379 736 360 0
input0
22 602 110 636 90 0 \NUL
Bit 3
22 262 114 296 94 0 \NUL
Bit 2
22 246 339 280 319 0 \NUL
Bit 1
22 592 321 626 301 0 \NUL
Bit 0
22 284 537 468 517 0 \NUL
Inputs from keypad (sel = 0)
22 293 504 456 484 0 \NUL
Inputs from ALU (sel = 1)
22 256 272 549 252 0 \NUL
4 muxes: 1 for each bit of keypad/ALU output
22 304 30 503 10 0 \NUL
MUXes for Keypad/ALU inputs
22 276 300 523 280 0 \NUL
Outputs 4-bit number for Register File
22 633 476 777 456 0 \NUL
Each of these outputs
22 636 505 753 485 0 \NUL
is an input for the
22 637 537 719 517 0 \NUL
register file.
19 134 199 193 180 0
sel
19 496 415 555 396 0
sel
19 118 421 177 402 0
sel
14 198 244 247 195
14 518 473 567 424
14 157 474 206 425
1 639 151 682 153
1 304 158 341 158
1 284 385 321 385
1 631 369 678 369
1 567 208 594 193
1 538 184 594 181
1 549 151 594 157
1 562 119 594 151
1 225 133 259 158
1 223 160 259 164
1 190 189 259 188
1 244 219 259 200
1 199 343 239 385
1 172 376 239 391
1 174 411 239 415
1 203 449 239 427
1 564 448 586 411
1 552 405 586 399
1 537 364 586 375
1 556 330 586 369
38 4
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 127 10 0 \NUL
Khalilollahi, Cory
22 12 54 66 34 0 \NUL
ckhalilo
22 12 102 150 82 0 \NUL
CSE 12, Winter 2020
22 311 44 497 24 0 \NUL
Writer Register Select Logic
22 26 142 574 122 0 \NUL
Uses a decoder to select a single register based on the input from the write address
22 25 173 413 153 0 \NUL
When update is 1, set the clock of the selected register to 1
22 9 588 440 568 0 \NUL
 AND gate can have two 1 inputs, output a 1, and update a register
19 424 490 483 471 0
update
22 10 561 388 541 0 \NUL
Because there is only one output of the decoder, only one
19 417 405 476 386 0
update
19 409 248 468 229 0
update
19 414 325 473 306 0
update
19 72 216 131 197 0
wadr_1
19 72 254 131 235 0
wadr_0
19 46 302 105 283 0
wadr_1
19 45 334 104 315 0
wadr_0
19 77 391 136 372 0
wadr_1
19 78 423 137 404 0
wadr_0
19 60 476 119 457 0
wadr_1
19 55 512 114 493 0
wadr_0
3 276 250 325 201 0 0
3 273 331 322 282 0 0
3 275 400 324 351 0 0
3 276 485 325 436 0 0
3 484 249 533 200 0 0
3 485 326 534 277 0 0
3 497 406 546 357 0 0
3 502 491 551 442 0 0
5 173 347 222 298 0
5 198 388 247 339 0
5 167 485 216 436 0
5 166 526 215 477 0
20 591 236 650 217 0
clk_3
20 591 314 650 295 0
clk_2
20 601 389 660 370 0
clk_1
20 599 473 658 454 0
clk_0
22 677 237 748 217 0 \NUL
Register 3
22 670 315 741 295 0 \NUL
Register 2
22 676 396 747 376 0 \NUL
Register 1
22 680 477 751 457 0 \NUL
Register 0
1 116 466 168 460
1 111 502 167 501
1 213 460 277 446
1 212 501 277 474
1 133 381 199 363
1 244 363 276 361
1 134 413 276 389
1 128 206 277 211
1 128 244 277 239
1 102 292 274 292
1 101 324 174 322
1 219 322 274 320
1 322 225 485 210
1 465 238 485 238
1 319 306 486 287
1 321 375 498 367
1 322 460 503 452
1 470 315 486 315
1 473 395 498 395
1 480 480 503 480
1 530 224 592 226
1 531 301 592 304
1 543 381 602 379
1 548 466 600 463
38 5
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 127 10 0 \NUL
Khalilollahi, Cory
22 12 54 66 34 0 \NUL
ckhalilo
22 12 102 150 82 0 \NUL
CSE 12, Winter 2020
19 129 192 188 173 0
input3
19 464 188 523 169 0
input2
19 505 457 564 438 0
input1
19 163 457 222 438 0
input0
24 274 241 323 169 1 1 1
24 604 239 653 167 1 1 1
24 607 509 656 437 1 1 1
24 288 508 337 436 1 1 1
20 343 199 402 180 0
reg3_3
20 681 197 740 178 0
reg3_2
20 680 467 739 448 0
reg3_1
20 354 466 413 447 0
reg3_0
22 370 41 441 21 0 \NUL
Register 3
22 176 585 667 565 0 \NUL
4-bit register: uses 4 flip-flops (each one stores one bit of the input number)
22 334 319 496 299 0 \NUL
When update is pushed,
22 333 343 517 323 0 \NUL
clock 3 turns on if register 3
22 26 447 133 427 0 \NUL
Clear: resets all
22 22 471 144 451 0 \NUL
flip-flops back to 0
22 660 83 734 63 0 \NUL
Stored bits
15 196 183 245 134
15 530 181 579 132
15 544 451 593 402
15 208 451 257 402
19 120 533 179 514 0
clear
5 207 548 256 499 0
19 451 530 510 511 0
clear
5 535 545 584 496 0
19 439 265 498 246 0
clear
5 545 280 594 231 0
19 107 264 166 245 0
clear
5 190 279 239 230 0
19 126 221 185 202 0
clk_3
19 462 227 521 208 0
clk_3
19 505 491 564 472 0
clk_3
22 332 369 411 349 0 \NUL
is selected.
19 161 489 220 470 0
clk_3
22 287 149 321 129 0 \NUL
Bit 3
22 625 151 659 131 0 \NUL
Bit 2
22 621 422 655 402 0 \NUL
Bit 1
22 296 428 330 408 0 \NUL
Bit 0
1 185 182 275 189
1 520 178 605 187
1 561 447 608 457
1 219 447 289 456
1 320 189 344 189
1 650 187 682 187
1 653 457 681 457
1 334 456 355 456
1 242 158 288 171
1 576 156 618 169
1 590 426 621 439
1 254 426 302 438
1 176 523 208 523
1 253 523 302 504
1 507 520 536 520
1 621 505 581 520
1 495 255 546 255
1 618 235 591 255
1 163 254 191 254
1 288 237 236 254
1 182 211 275 207
1 518 217 605 205
1 561 481 608 475
1 217 479 289 474
38 6
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 127 10 0 \NUL
Khalilollahi, Cory
22 12 54 66 34 0 \NUL
ckhalilo
22 12 102 150 82 0 \NUL
CSE 12, Winter 2020
19 129 192 188 173 0
input3
19 464 188 523 169 0
input2
19 505 457 564 438 0
input1
19 163 457 222 438 0
input0
24 274 241 323 169 1 1 1
24 604 239 653 167 1 1 1
24 607 509 656 437 1 1 1
24 288 508 337 436 1 1 1
20 343 199 402 180 0
reg2_3
20 683 197 742 178 0
reg2_2
20 680 467 739 448 0
reg2_1
20 354 466 413 447 0
reg2_0
22 370 41 441 21 0 \NUL
Register 2
22 176 585 667 565 0 \NUL
4-bit register: uses 4 flip-flops (each one stores one bit of the input number)
22 334 319 496 299 0 \NUL
When update is pushed,
22 333 343 517 323 0 \NUL
clock 2 turns on if register 2
22 26 447 133 427 0 \NUL
Clear: resets all
22 22 471 144 451 0 \NUL
flip-flops back to 0
22 660 83 734 63 0 \NUL
Stored bits
15 196 183 245 134
15 530 181 579 132
15 544 451 593 402
15 208 451 257 402
19 120 533 179 514 0
clear
5 207 548 256 499 0
19 451 530 510 511 0
clear
5 535 545 584 496 0
19 439 265 498 246 0
clear
5 545 280 594 231 0
19 108 262 167 243 0
clear
5 187 277 236 228 0
19 126 221 185 202 0
clk_2
19 462 227 521 208 0
clk_2
19 505 491 564 472 0
clk_2
22 332 369 411 349 0 \NUL
is selected.
19 161 489 220 470 0
clk_2
22 287 149 321 129 0 \NUL
Bit 3
22 625 151 659 131 0 \NUL
Bit 2
22 621 422 655 402 0 \NUL
Bit 1
22 296 428 330 408 0 \NUL
Bit 0
1 185 182 275 189
1 520 178 605 187
1 561 447 608 457
1 219 447 289 456
1 320 189 344 189
1 650 187 684 187
1 653 457 681 457
1 334 456 355 456
1 242 158 288 171
1 576 156 618 169
1 590 426 621 439
1 254 426 302 438
1 176 523 208 523
1 253 523 302 504
1 507 520 536 520
1 621 505 581 520
1 495 255 546 255
1 618 235 591 255
1 164 252 188 252
1 288 237 233 252
1 182 211 275 207
1 518 217 605 205
1 561 481 608 475
1 217 479 289 474
38 7
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 127 10 0 \NUL
Khalilollahi, Cory
22 12 54 66 34 0 \NUL
ckhalilo
22 12 102 150 82 0 \NUL
CSE 12, Winter 2020
19 129 192 188 173 0
input3
19 464 188 523 169 0
input2
19 505 457 564 438 0
input1
19 163 457 222 438 0
input0
24 274 241 323 169 1 1 1
24 604 239 653 167 1 1 1
24 607 509 656 437 1 1 1
24 288 508 337 436 1 1 1
20 343 199 402 180 0
reg1_3
20 674 197 733 178 0
reg1_2
20 680 467 739 448 0
reg1_1
20 354 466 413 447 0
reg1_0
22 370 41 441 21 0 \NUL
Register 1
22 176 585 667 565 0 \NUL
4-bit register: uses 4 flip-flops (each one stores one bit of the input number)
22 334 319 496 299 0 \NUL
When update is pushed,
22 333 343 517 323 0 \NUL
clock 1 turns on if register 1
22 26 447 133 427 0 \NUL
Clear: resets all
22 22 471 144 451 0 \NUL
flip-flops back to 0
22 660 83 734 63 0 \NUL
Stored bits
15 196 183 245 134
15 530 181 579 132
15 544 451 593 402
15 208 451 257 402
19 120 533 179 514 0
clear
5 207 548 256 499 0
19 451 530 510 511 0
clear
5 535 545 584 496 0
19 439 265 498 246 0
clear
5 545 280 594 231 0
19 102 261 161 242 0
clear
5 186 276 235 227 0
19 126 221 185 202 0
clk_1
19 462 227 521 208 0
clk_1
19 505 491 564 472 0
clk_1
22 332 369 411 349 0 \NUL
is selected.
19 161 489 220 470 0
clk_1
22 287 149 321 129 0 \NUL
Bit 3
22 625 151 659 131 0 \NUL
Bit 2
22 621 422 655 402 0 \NUL
Bit 1
22 296 428 330 408 0 \NUL
Bit 0
1 185 182 275 189
1 520 178 605 187
1 561 447 608 457
1 219 447 289 456
1 320 189 344 189
1 650 187 675 187
1 653 457 681 457
1 334 456 355 456
1 242 158 288 171
1 576 156 618 169
1 590 426 621 439
1 254 426 302 438
1 176 523 208 523
1 253 523 302 504
1 507 520 536 520
1 621 505 581 520
1 495 255 546 255
1 618 235 591 255
1 158 251 187 251
1 288 237 232 251
1 182 211 275 207
1 518 217 605 205
1 561 481 608 475
1 217 479 289 474
38 8
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 127 10 0 \NUL
Khalilollahi, Cory
22 12 54 66 34 0 \NUL
ckhalilo
22 12 102 150 82 0 \NUL
CSE 12, Winter 2020
19 129 192 188 173 0
input3
19 464 188 523 169 0
input2
19 505 457 564 438 0
input1
19 163 457 222 438 0
input0
24 274 241 323 169 1 1 1
24 604 239 653 167 1 1 1
24 607 509 656 437 1 1 1
24 288 508 337 436 1 1 1
20 343 199 402 180 0
reg0_3
20 679 197 738 178 0
reg0_2
20 680 467 739 448 0
reg0_1
20 354 466 413 447 0
reg0_0
22 370 41 441 21 0 \NUL
Register 0
22 176 585 667 565 0 \NUL
4-bit register: uses 4 flip-flops (each one stores one bit of the input number)
22 334 319 496 299 0 \NUL
When update is pushed,
22 333 343 517 323 0 \NUL
clock 0 turns on if register 0
22 26 447 133 427 0 \NUL
Clear: resets all
22 22 471 144 451 0 \NUL
flip-flops back to 0
22 660 83 734 63 0 \NUL
Stored bits
15 196 183 245 134
15 530 181 579 132
15 544 451 593 402
15 208 451 257 402
19 120 533 179 514 0
clear
5 207 548 256 499 0
19 451 530 510 511 0
clear
5 535 545 584 496 0
19 439 265 498 246 0
clear
5 545 280 594 231 0
19 118 260 177 241 0
clear
5 192 275 241 226 0
19 126 221 185 202 0
clk_0
19 462 227 521 208 0
clk_0
19 505 491 564 472 0
clk_0
22 332 369 411 349 0 \NUL
is selected.
19 161 489 220 470 0
clk_0
22 287 149 321 129 0 \NUL
Bit 3
22 625 151 659 131 0 \NUL
Bit 2
22 621 422 655 402 0 \NUL
Bit 1
22 296 428 330 408 0 \NUL
Bit 0
1 185 182 275 189
1 520 178 605 187
1 561 447 608 457
1 219 447 289 456
1 320 189 344 189
1 650 187 680 187
1 653 457 681 457
1 334 456 355 456
1 242 158 288 171
1 576 156 618 169
1 590 426 621 439
1 254 426 302 438
1 176 523 208 523
1 253 523 302 504
1 507 520 536 520
1 621 505 581 520
1 495 255 546 255
1 618 235 591 255
1 174 250 193 250
1 288 237 238 250
1 182 211 275 207
1 518 217 605 205
1 561 481 608 475
1 217 479 289 474
38 9
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 127 10 0 \NUL
Khalilollahi, Cory
22 12 54 66 34 0 \NUL
ckhalilo
22 12 102 150 82 0 \NUL
CSE 12, Winter 2020
22 286 31 483 11 0 \NUL
Read Address 1 + ALU Input 1
31 629 236 678 151 0 1
19 122 156 181 137 0
reg3_2
19 526 136 585 117 0
reg3_3
19 86 415 145 396 0
reg3_0
19 560 416 619 397 0
reg3_1
19 82 183 141 164 0
reg2_2
19 475 168 534 149 0
reg2_3
19 49 442 108 423 0
reg2_0
19 503 444 562 425 0
reg2_1
19 48 217 107 198 0
reg1_2
19 464 206 523 187 0
reg1_3
19 20 468 79 449 0
reg1_0
19 465 472 524 453 0
reg1_1
19 65 246 124 227 0
reg0_2
19 468 228 527 209 0
reg0_3
19 55 492 114 473 0
reg0_0
19 466 499 525 480 0
reg0_1
31 213 256 262 171 0 1
31 632 529 681 444 0 1
31 211 520 260 435 0 1
20 711 200 770 181 0
in1_3
20 296 220 355 201 0
in1_2
20 723 493 782 474 0
in1_1
20 291 484 350 465 0
in1_0
22 317 340 491 320 0 \NUL
4-bit number output from 4
22 638 144 672 124 0 \NUL
Bit 3
22 220 164 254 144 0 \NUL
Bit 2
22 321 365 487 345 0 \NUL
MUXes is input 1 for ALU
22 223 427 257 407 0 \NUL
Bit 0
22 642 432 676 412 0 \NUL
Bit 1
22 183 68 682 48 0 \NUL
Uses four 4x1 MUXes to output a four-bit number, based on which register is
22 207 94 637 74 0 \NUL
chosen. The register that is chosen depends on the read address.
19 56 528 115 509 0
adr1_1
19 55 558 114 539 0
adr1_0
14 161 587 210 538
19 458 536 517 517 0
adr1_1
19 459 562 518 543 0
adr1_0
14 543 585 592 536
19 78 281 137 262 0
adr1_1
19 93 307 152 288 0
adr1_0
14 157 330 206 281
19 486 263 545 244 0
adr1_1
19 501 292 560 273 0
adr1_0
14 560 313 609 264
1 582 126 630 178
1 531 158 630 184
1 520 196 630 190
1 524 218 630 196
1 178 146 214 198
1 138 173 214 204
1 104 207 214 210
1 121 236 214 216
1 616 406 633 471
1 559 434 633 477
1 521 462 633 483
1 522 489 633 489
1 142 405 212 462
1 105 432 212 468
1 76 458 212 474
1 111 482 212 480
1 675 190 712 190
1 259 210 297 210
1 678 483 724 483
1 257 474 292 474
1 112 518 212 498
1 111 548 212 504
1 212 516 207 562
1 589 560 633 525
1 515 552 633 513
1 514 526 633 507
1 134 271 214 234
1 149 297 214 240
1 203 305 214 252
1 630 214 542 253
1 630 220 557 282
1 606 288 630 232
38 10
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 127 10 0 \NUL
Khalilollahi, Cory
22 12 54 66 34 0 \NUL
ckhalilo
22 12 102 150 82 0 \NUL
CSE 12, Winter 2020
22 286 31 483 11 0 \NUL
Read Address 2 + ALU Input 2
31 629 236 678 151 0 1
19 122 156 181 137 0
reg3_2
19 526 136 585 117 0
reg3_3
19 86 415 145 396 0
reg3_0
19 560 416 619 397 0
reg3_1
19 82 183 141 164 0
reg2_2
19 475 168 534 149 0
reg2_3
19 49 442 108 423 0
reg2_0
19 503 444 562 425 0
reg2_1
19 48 217 107 198 0
reg1_2
19 464 206 523 187 0
reg1_3
19 20 468 79 449 0
reg1_0
19 465 472 524 453 0
reg1_1
19 65 246 124 227 0
reg0_2
19 468 228 527 209 0
reg0_3
19 55 492 114 473 0
reg0_0
19 466 499 525 480 0
reg0_1
31 213 256 262 171 0 1
31 632 529 681 444 0 1
31 211 520 260 435 0 1
20 711 200 770 181 0
in2_3
20 296 220 355 201 0
in2_2
20 723 493 782 474 0
in2_1
20 291 484 350 465 0
in2_0
22 317 340 491 320 0 \NUL
4-bit number output from 4
22 638 144 672 124 0 \NUL
Bit 3
22 220 164 254 144 0 \NUL
Bit 2
22 321 365 487 345 0 \NUL
MUXes is input 1 for ALU
22 223 427 257 407 0 \NUL
Bit 0
22 642 432 676 412 0 \NUL
Bit 1
22 183 68 682 48 0 \NUL
Uses four 4x1 MUXes to output a four-bit number, based on which register is
22 207 94 637 74 0 \NUL
chosen. The register that is chosen depends on the read address.
19 56 528 115 509 0
adr2_1
19 55 558 114 539 0
adr2_0
14 161 587 210 538
19 458 536 517 517 0
adr2_1
19 459 562 518 543 0
adr2_0
14 543 585 592 536
19 78 281 137 262 0
adr2_1
19 93 307 152 288 0
adr2_0
14 157 330 206 281
19 486 263 545 244 0
adr2_1
19 501 292 560 273 0
adr2_0
14 560 313 609 264
1 582 126 630 178
1 531 158 630 184
1 520 196 630 190
1 524 218 630 196
1 178 146 214 198
1 138 173 214 204
1 104 207 214 210
1 121 236 214 216
1 616 406 633 471
1 559 434 633 477
1 521 462 633 483
1 522 489 633 489
1 142 405 212 462
1 105 432 212 468
1 76 458 212 474
1 111 482 212 480
1 675 190 712 190
1 259 210 297 210
1 678 483 724 483
1 257 474 292 474
1 112 518 212 498
1 111 548 212 504
1 212 516 207 562
1 589 560 633 525
1 515 552 633 513
1 514 526 633 507
1 134 271 214 234
1 149 297 214 240
1 203 305 214 252
1 630 214 542 253
1 630 220 557 282
1 606 288 630 232
38 11
22 12 78 52 58 0 \NUL
Lab 2
22 12 30 127 10 0 \NUL
Khalilollahi, Cory
22 12 54 66 34 0 \NUL
ckhalilo
22 12 102 150 82 0 \NUL
CSE 12, Winter 2020
22 349 33 438 13 0 \NUL
ALU - Rotator
31 635 194 684 109 0 1
31 265 200 314 115 0 1
31 644 472 693 387 0 1
31 196 460 245 375 0 1
20 701 157 760 138 0
alu_3
20 324 164 383 145 0
alu_2
20 723 436 782 417 0
alu_1
20 278 424 337 405 0
alu_0
19 431 145 490 126 0
in1_2
19 445 173 504 154 0
in1_3
19 455 118 514 99 0
in1_1
19 520 96 579 77 0
in1_0
19 137 173 196 154 0
in1_2
19 197 99 256 80 0
in1_3
19 132 154 191 135 0
in1_1
19 165 129 224 110 0
in1_0
19 548 368 607 349 0
in1_2
19 500 400 559 381 0
in1_3
19 465 453 524 434 0
in1_1
19 473 430 532 411 0
in1_0
19 75 380 134 361 0
in1_2
19 46 406 105 387 0
in1_3
19 110 348 169 329 0
in1_1
19 44 431 103 412 0
in1_0
22 642 101 676 81 0 \NUL
Bit 3
22 275 107 309 87 0 \NUL
Bit 2
22 653 371 687 351 0 \NUL
Bit 1
22 203 366 237 346 0 \NUL
Bit 0
22 572 31 782 11 0 \NUL
4-bit output after rotating input 1
22 577 57 763 37 0 \NUL
for (input 2) number of times
22 17 562 489 542 0 \NUL
Only bits 0 and 1 are needed from input 2, for after every 3 (11 in binary)
14 576 253 625 204
19 532 194 591 175 0
in2_1
19 537 222 596 203 0
in2_0
14 576 253 625 204
19 532 194 591 175 0
in2_1
14 177 246 226 197
19 122 202 181 183 0
in2_1
19 130 224 189 205 0
in2_0
14 118 515 167 466
19 78 462 137 443 0
in2_1
19 81 486 140 467 0
in2_0
14 587 547 636 498
19 503 491 562 472 0
in2_1
19 507 521 566 502 0
in2_0
22 17 585 339 565 0 \NUL
 rotations, the number returns to its original form.
22 17 279 259 259 0 \NUL
Uses four 4x1 MUXes (1 for each bit)
22 611 586 776 566 0 \NUL
Rotations are bitwise left
22 284 364 420 344 0 \NUL
number accordingly.
22 283 340 495 320 0 \NUL
rearrange the bits of the original
22 282 315 492 295 0 \NUL
ranges from 0-3. So, the MUXes
22 282 292 523 272 0 \NUL
is equal to the selector inputs, which
22 282 268 535 248 0 \NUL
The number of rotations for each MUX 
1 576 86 636 136
1 511 108 636 142
1 487 135 636 148
1 501 163 636 154
1 253 89 266 142
1 221 119 266 148
1 188 144 266 154
1 193 163 266 160
1 604 358 645 414
1 556 390 645 420
1 529 420 645 426
1 521 443 645 432
1 166 338 197 402
1 131 370 197 408
1 102 396 197 414
1 100 421 197 420
1 681 148 702 147
1 311 154 325 154
1 690 426 724 426
1 242 414 279 414
1 588 184 636 172
1 593 212 636 178
1 636 190 622 228
1 178 192 266 178
1 186 214 266 184
1 223 221 266 196
1 134 452 197 438
1 137 476 197 444
1 164 490 197 456
1 633 522 645 468
1 559 481 645 450
1 563 511 645 456
39 16777215
47 0
40 1 6 6
50 800 600
51 0 100
30
System
16
700
0
0
0
0
0
34
